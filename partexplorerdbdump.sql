DROP SCHEMA IF EXISTS `partexplorerdb` ;
CREATE SCHEMA IF NOT EXISTS `partexplorerdb` ;
USE `partexplorerdb` ;


-- MySQL Script generated by MySQL Workbench
-- Sat Dec 19 02:59:59 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema partexplorerdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `partexplorerdb` ;

-- -----------------------------------------------------
-- Schema partexplorerdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `partexplorerdb` ;
USE `partexplorerdb` ;

-- -----------------------------------------------------
-- Table `partexplorerdb`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`User` (
  `userID` CHAR(7) NOT NULL,
  `userName` VARCHAR(30) NOT NULL,
  `userEmail` VARCHAR(30) NOT NULL,
  `userPhone` VARCHAR(13) NOT NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`Build`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`Build` (
  `buildID` CHAR(7) NOT NULL,
  `buildName` VARCHAR(30) NOT NULL,
  `buildPrice` DECIMAL(6,2) UNSIGNED NULL,
  `user` CHAR(7) NOT NULL,
  PRIMARY KEY (`buildID`),
  INDEX `fk_Build_User1_idx` (`user` ASC),
  CONSTRAINT `fk_Build_User1`
    FOREIGN KEY (`user`)
    REFERENCES `partexplorerdb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`Guide`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`Guide` (
  `guideName` VARCHAR(30) NOT NULL,
  `guideDate` DATE NOT NULL,
  `guideContent` VARCHAR(30) NULL,
  `build` CHAR(7) NOT NULL,
  PRIMARY KEY (`guideName`, `build`),
  INDEX `fk_Guide_Build1_idx` (`build` ASC),
  CONSTRAINT `fk_Guide_Build1`
    FOREIGN KEY (`build`)
    REFERENCES `partexplorerdb`.`Build` (`buildID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`Order` (
  `orderID` CHAR(7) NOT NULL,
  `address` VARCHAR(30) NOT NULL,
  `city` VARCHAR(30) NULL,
  `orderDate` DATE NOT NULL,
  `daysCount` INT(9) NOT NULL,
  `user` CHAR(7) NOT NULL,
  PRIMARY KEY (`orderID`),
  INDEX `fk_Order_User1_idx` (`user` ASC),
  CONSTRAINT `fk_Order_User1`
    FOREIGN KEY (`user`)
    REFERENCES `partexplorerdb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`Supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`Supplier` (
  `supplierID` CHAR(7) NOT NULL,
  `supplierName` VARCHAR(30) NOT NULL,
  `supplierURL` VARCHAR(30) NULL,
  `supplierPhone` VARCHAR(13) NOT NULL,
  PRIMARY KEY (`supplierID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`Product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`Product` (
  `productID` CHAR(7) NOT NULL,
  `productType` VARCHAR(30) NOT NULL,
  `productName` VARCHAR(30) NOT NULL,
  `productURL` VARCHAR(30) NULL,
  `manufacturer` VARCHAR(30) NOT NULL,
  `price` DECIMAL(6,2) UNSIGNED NOT NULL,
  `isAvailable` BINARY(1) NOT NULL,
  `supplier` CHAR(7) NOT NULL,
  PRIMARY KEY (`productID`),
  INDEX `fk_Product_Supplier1_idx` (`supplier` ASC),
  CONSTRAINT `fk_Product_Supplier1`
    FOREIGN KEY (`supplier`)
    REFERENCES `partexplorerdb`.`Supplier` (`supplierID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`Payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`Payment` (
  `paymentID` CHAR(7) NULL,
  `paymentDate` DATE NOT NULL,
  `totalAmount` DECIMAL(6,2) UNSIGNED NULL,
  `order` CHAR(7) NOT NULL,
  PRIMARY KEY (`paymentID`),
  INDEX `fk_Payment_Order1_idx` (`order` ASC),
  CONSTRAINT `fk_Payment_Order1`
    FOREIGN KEY (`order`)
    REFERENCES `partexplorerdb`.`Order` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`BuildConsistsOfProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`BuildConsistsOfProduct` (
  `buildID` CHAR(7) NOT NULL,
  `productID` CHAR(7) NOT NULL,
  `quantity` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`buildID`, `productID`),
  INDEX `fk_Build_has_Product_Product1_idx` (`productID` ASC),
  INDEX `fk_Build_has_Product_Build1_idx` (`buildID` ASC),
  CONSTRAINT `fk_Build_has_Product_Build1`
    FOREIGN KEY (`buildID`)
    REFERENCES `partexplorerdb`.`Build` (`buildID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Build_has_Product_Product1`
    FOREIGN KEY (`productID`)
    REFERENCES `partexplorerdb`.`Product` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`OrderIncludesBuild`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`OrderIncludesBuild` (
  `orderID` CHAR(7) NOT NULL,
  `buildID` CHAR(7) NOT NULL,
  PRIMARY KEY (`orderID`, `buildID`),
  INDEX `fk_Order_has_Build_Build1_idx` (`buildID` ASC),
  INDEX `fk_Order_has_Build_Order1_idx` (`orderID` ASC),
  CONSTRAINT `fk_Order_has_Build_Order1`
    FOREIGN KEY (`orderID`)
    REFERENCES `partexplorerdb`.`Order` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_has_Build_Build1`
    FOREIGN KEY (`buildID`)
    REFERENCES `partexplorerdb`.`Build` (`buildID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`OrderContainsProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`OrderContainsProduct` (
  `orderID` CHAR(7) NOT NULL,
  `productID` CHAR(7) NOT NULL,
  `quantity` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`orderID`, `productID`),
  INDEX `fk_Order_has_Product_Product1_idx` (`productID` ASC),
  INDEX `fk_Order_has_Product_Order1_idx` (`orderID` ASC),
  CONSTRAINT `fk_Order_has_Product_Order1`
    FOREIGN KEY (`orderID`)
    REFERENCES `partexplorerdb`.`Order` (`orderID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Order_has_Product_Product1`
    FOREIGN KEY (`productID`)
    REFERENCES `partexplorerdb`.`Product` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`isCompatibleWith`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`isCompatibleWith` (
  `productID1` CHAR(7) NOT NULL,
  `productID2` CHAR(7) NOT NULL,
  `compatibilityType` ENUM('MR ', 'MC ', 'MG ', 'PG ', 'MT ', 'AT ', 'MHD') NOT NULL,
  PRIMARY KEY (`productID1`, `productID2`),
  INDEX `fk_Product_has_Product_Product2_idx` (`productID2` ASC),
  INDEX `fk_Product_has_Product_Product1_idx` (`productID1` ASC),
  CONSTRAINT `fk_Product_has_Product_Product1`
    FOREIGN KEY (`productID1`)
    REFERENCES `partexplorerdb`.`Product` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Product_has_Product_Product2`
    FOREIGN KEY (`productID2`)
    REFERENCES `partexplorerdb`.`Product` (`productID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `partexplorerdb`.`UserRatesGuide`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`UserRatesGuide` (
  `userID` CHAR(7) NOT NULL,
  `guideName` VARCHAR(30) NOT NULL,
  `build` CHAR(7) NOT NULL,
  `ratingGrade` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`userID`, `guideName`, `build`),
  INDEX `fk_User_has_Guide_Guide1_idx` (`guideName` ASC, `build` ASC),
  INDEX `fk_User_has_Guide_User1_idx` (`userID` ASC),
  CONSTRAINT `fk_User_has_Guide_User1`
    FOREIGN KEY (`userID`)
    REFERENCES `partexplorerdb`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Guide_Guide1`
    FOREIGN KEY (`guideName` , `build`)
    REFERENCES `partexplorerdb`.`Guide` (`guideName` , `build`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `partexplorerdb` ;

-- -----------------------------------------------------
-- Placeholder table for view `partexplorerdb`.`UserView`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`UserView` (`userID` INT, `userEmail` INT, `userPhone` INT, `orderID` INT, `address` INT, `city` INT, `orderDate` INT, `daysCount` INT);

-- -----------------------------------------------------
-- Placeholder table for view `partexplorerdb`.`BuildView`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`BuildView` (`userName` INT, `buildID` INT, `buildName` INT, `buildPrice` INT);

-- -----------------------------------------------------
-- Placeholder table for view `partexplorerdb`.`SupplierView`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`SupplierView` (`productID` INT, `productType` INT, `productName` INT, `price` INT, `isAvailable` INT, `supplierID` INT, `supplierName` INT, `supplierURL` INT, `supplierPhone` INT);

-- -----------------------------------------------------
-- Placeholder table for view `partexplorerdb`.`PaymentView`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `partexplorerdb`.`PaymentView` (`userName` INT, `userEmail` INT, `userPhone` INT, `orderDate` INT, `city` INT, `paymentID` INT, `totalAmount` INT);

-- -----------------------------------------------------
-- View `partexplorerdb`.`UserView`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `partexplorerdb`.`UserView`;
USE `partexplorerdb`;
CREATE  OR REPLACE VIEW `UserView` AS
SELECT `userID`, `userEmail`, `userPhone`,`orderID`, `address`, `city`, `orderDate`, `daysCount` FROM `User` JOIN `Order` 
ON `userID` = `user`;

-- -----------------------------------------------------
-- View `partexplorerdb`.`BuildView`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `partexplorerdb`.`BuildView`;
USE `partexplorerdb`;
CREATE  OR REPLACE VIEW `BuildView` AS
SELECT `userName`,`buildID`,`buildName`,`buildPrice` FROM (`User` JOIN `Build`
ON `userID` = `user`);

-- -----------------------------------------------------
-- View `partexplorerdb`.`SupplierView`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `partexplorerdb`.`SupplierView`;
USE `partexplorerdb`;
CREATE  OR REPLACE VIEW `SupplierView` AS
SELECT `productID`,`productType`,`productName`,`price`,`isAvailable`,`supplierID`,`supplierName`,`supplierURL`,`supplierPhone` FROM (`Product` JOIN `Supplier`
ON `supplier` = `supplierID` );

-- -----------------------------------------------------
-- View `partexplorerdb`.`PaymentView`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `partexplorerdb`.`PaymentView`;
USE `partexplorerdb`;
CREATE  OR REPLACE VIEW `PaymentView` AS
SELECT `userName`, `userEmail`, `userPhone`, `orderDate`, `city`, `paymentID`, `totalAmount` FROM ((`User` JOIN `Order` ON `userID` = `user`) JOIN `Payment` 
ON `orderID` = `order`);
USE `partexplorerdb`;

DELIMITER $$
USE `partexplorerdb`$$
CREATE TRIGGER `partexplorerdb`.`Build_BEFORE_INSERT` BEFORE INSERT ON `Build` FOR EACH ROW
BEGIN

END$$

USE `partexplorerdb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `partexplorerdb`.`Build_BEFORE_UPDATE` BEFORE UPDATE ON `Build` FOR EACH ROW
BEGIN

END
$$

USE `partexplorerdb`$$
CREATE TRIGGER `partexplorerdb`.`Payment_BEFORE_INSERT` BEFORE INSERT ON `Payment` FOR EACH ROW
BEGIN 

END$$

USE `partexplorerdb`$$
CREATE TRIGGER `partexplorerdb`.`Payment_BEFORE_UPDATE` BEFORE UPDATE ON `Payment` FOR EACH ROW
BEGIN

END$$

USE `partexplorerdb`$$
CREATE TRIGGER `partexplorerdb`.`UserRatesGuide_BEFORE_INSERT` BEFORE INSERT ON `UserRatesGuide` FOR EACH ROW
BEGIN
	if NEW.`ratingGrade` > 10 then
		signal sqlstate '45000' set message_text = 'invalid data';
	end if;
END$$

USE `partexplorerdb`$$
CREATE TRIGGER `partexplorerdb`.`UserRatesGuide_BEFORE_UPDATE` BEFORE UPDATE ON `UserRatesGuide` FOR EACH ROW
BEGIN
	if NEW.`ratingGrade` > 10 then
		signal sqlstate '45000' set message_text = 'invalid data';
	end if;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`User` (`userID`, `userName`, `userEmail`, `userPhone`) VALUES ('0000001', 'panos98', 'panikas@yahoo.gr', '306933388843');
INSERT INTO `partexplorerdb`.`User` (`userID`, `userName`, `userEmail`, `userPhone`) VALUES ('0000002', 'panagiotis97', 'pkosmas@auth.gr', '306933344443');
INSERT INTO `partexplorerdb`.`User` (`userID`, `userName`, `userEmail`, `userPhone`) VALUES ('0000003', 'catdog99', 'karas@otenet.gr', '3069777444876');
INSERT INTO `partexplorerdb`.`User` (`userID`, `userName`, `userEmail`, `userPhone`) VALUES ('0000004', 'ptheofil', 'ptheofil@hotmail.com', '3069987898789');
INSERT INTO `partexplorerdb`.`User` (`userID`, `userName`, `userEmail`, `userPhone`) VALUES ('0000005', 'PCmaniac', 'psycho@yahoo.gr', '3069366677788');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`Build`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0001000', 'MyUltimatePC', 1200.00, '0000001');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0002000', 'KOLOMPOUROPC', 900.00, '0000002');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0003000', 'Gaming PC', 870.00, '0000001');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0004000', 'MyStreamingPC', 1000.00, '0000003');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0005000', 'TESTPC', 500.00, '0000004');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0006000', 'COOLpc', 720.00, '0000004');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0007000', 'I LIKE IT', 700.00, '0000005');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0008000', 'The best!', 1400.00, '0000005');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0009000', 'MyPCBuild', 820.00, '0000005');
INSERT INTO `partexplorerdb`.`Build` (`buildID`, `buildName`, `buildPrice`, `user`) VALUES ('0010000', 'AllOver', 1240.00, '0000005');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`Guide`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`Guide` (`guideName`, `guideDate`, `guideContent`, `build`) VALUES ('MyGuide', '2020-05-15', 'This is a very good guide.', '0003000');
INSERT INTO `partexplorerdb`.`Guide` (`guideName`, `guideDate`, `guideContent`, `build`) VALUES ('GuideThis', '2020-09-08', 'My Best PC.', '0005000');
INSERT INTO `partexplorerdb`.`Guide` (`guideName`, `guideDate`, `guideContent`, `build`) VALUES ('Extraordinary', '2020-03-25', 'Perfect Gaming MONSTER.', '0004000');
INSERT INTO `partexplorerdb`.`Guide` (`guideName`, `guideDate`, `guideContent`, `build`) VALUES ('LOVEIT', '2020-12-01', 'See that guide.', '0006000');
INSERT INTO `partexplorerdb`.`Guide` (`guideName`, `guideDate`, `guideContent`, `build`) VALUES ('NewANDCheap', '2020-11-15', 'My Favourie low-cost PC build.', '0002000');
INSERT INTO `partexplorerdb`.`Guide` (`guideName`, `guideDate`, `guideContent`, `build`) VALUES ('Perfection', '2020-06-15', 'KOLOMPOUROPC, OTI KALYTERO.', '0007000');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`Order`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('1000000', 'Lissipou 65', 'Ierapetra', '2020-12-25', 20, '0000001');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('1000001', 'Perikleous 60', 'Heraklion', '2020-09-08', 33, '0000002');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('1000002', 'Ypsilanti 100', 'Heraklion', '2020-05-03', 10, '0000003');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('2000000', 'Martiou 65', 'Thessaloniki', '2020-12-15', 11, '0000001');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('3000000', 'Kerasountos 65', 'Drama', '2020-11-12', 22, '0000002');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('4000000', 'Psiloriti 178', 'Edessa', '2021-01-01', 3, '0000003');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('5000000', 'Pithagora 67', 'Samos', '2020-12-18', 31, '0000004');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('6000000', 'Papanastasiou 55', 'Thessaloniki', '2020-11-12', 2, '0000005');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('7000000', 'Papafi 102', 'Kavala', '2020-12-25', 9, '0000003');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('8000000', 'kirkitzi 55', 'Ierapetra', '2020-11-20', 70, '0000005');
INSERT INTO `partexplorerdb`.`Order` (`orderID`, `address`, `city`, `orderDate`, `daysCount`, `user`) VALUES ('9000000', 'solonos 5', 'Heraklion', '2020-01-20', 65, '0000004');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`Supplier`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`Supplier` (`supplierID`, `supplierName`, `supplierURL`, `supplierPhone`) VALUES ('0000001', 'HQtech', 'https://HQtech.gr', '2156257255');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`Product`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('0000002', 'motherboard', 'GIGABYTE Z490HD', 'https://www.gigabyte.com', 'GIGABYTE', 99, 0x31, '0000001');
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('0001600', 'motherboard', 'AM4 Asrock', 'https://www.asrock.com', 'ASROCK', 120, 0x31, '0000001');
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('0001699', 'motherboard', 'MSI Gaming X', 'https://www.msi.com', 'MSI', 150, 0x31, '0000001');
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('0001721', 'CPU', 'Intel i7-10700k', 'https://www.intel.com', 'INTEL', 320, 0x31, '0000001');
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('0003331', 'Tower', 'MX330 Midi Tower', 'https://www.corsair.com', 'Corsair', 320, 0x31, '0000001');
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('0004200', 'CPU', 'AMD Ryzen 5', 'https://www.amd.com', 'AMD', 320, 0x31, '0000001');
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('0006510', 'RAM', 'Corsair 16GB 3200MHz', 'https://www.corsair.com', 'CORSAIR', 78, 0x31, '0000001');
INSERT INTO `partexplorerdb`.`Product` (`productID`, `productType`, `productName`, `productURL`, `manufacturer`, `price`, `isAvailable`, `supplier`) VALUES ('1000000', 'CPU', 'AMD Ryzen 3', 'https://www.amd.com', 'AMD', 258, 0x31, '0000001');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`Payment`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000001', '2021-01-01', 879.00, '1000000');
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000002', '2020-10-20', 879.00, '2000000');
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000003', '2020-10-20', 530.00, '3000000');
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000004', '2020-10-20', 100.00, '4000000');
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000005', '2020-11-29', 1200.00, '5000000');
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000006', '2021-02-01', 750.00, '8000000');
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000007', '2020-03-25', 999.00, '9000000');
INSERT INTO `partexplorerdb`.`Payment` (`paymentID`, `paymentDate`, `totalAmount`, `order`) VALUES ('0000008', '2020-10-10', 1110.00, '1000001');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`BuildConsistsOfProduct`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0002000', '0001699', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0002000', '0001721', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0003000', '0000002', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0003000', '0001721', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0004000', '0001699', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0004000', '1000000', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0005000', '0001699', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0005000', '0001721', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0006000', '0001721', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0007000', '0001600', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0007000', '0004200', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0007000', '0006510', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0008000', '0001600', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0008000', '0004200', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0009000', '0004200', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0009000', '0006510', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0010000', '0001600', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0010000', '0003331', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0010000', '0004200', 1);
INSERT INTO `partexplorerdb`.`BuildConsistsOfProduct` (`buildID`, `productID`, `quantity`) VALUES ('0010000', '0006510', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`OrderIncludesBuild`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`OrderIncludesBuild` (`orderID`, `buildID`) VALUES ('1000000', '0001000');
INSERT INTO `partexplorerdb`.`OrderIncludesBuild` (`orderID`, `buildID`) VALUES ('1000001', '0002000');
INSERT INTO `partexplorerdb`.`OrderIncludesBuild` (`orderID`, `buildID`) VALUES ('1000002', '0003000');
INSERT INTO `partexplorerdb`.`OrderIncludesBuild` (`orderID`, `buildID`) VALUES ('2000000', '0004000');
INSERT INTO `partexplorerdb`.`OrderIncludesBuild` (`orderID`, `buildID`) VALUES ('3000000', '0005000');
INSERT INTO `partexplorerdb`.`OrderIncludesBuild` (`orderID`, `buildID`) VALUES ('4000000', '0006000');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`OrderContainsProduct`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`OrderContainsProduct` (`orderID`, `productID`, `quantity`) VALUES ('1000000', '0000002', 1);
INSERT INTO `partexplorerdb`.`OrderContainsProduct` (`orderID`, `productID`, `quantity`) VALUES ('2000000', '0001699', 1);
INSERT INTO `partexplorerdb`.`OrderContainsProduct` (`orderID`, `productID`, `quantity`) VALUES ('3000000', '0001721', 1);
INSERT INTO `partexplorerdb`.`OrderContainsProduct` (`orderID`, `productID`, `quantity`) VALUES ('4000000', '0003331', 1);
INSERT INTO `partexplorerdb`.`OrderContainsProduct` (`orderID`, `productID`, `quantity`) VALUES ('5000000', '0001699', 2);
INSERT INTO `partexplorerdb`.`OrderContainsProduct` (`orderID`, `productID`, `quantity`) VALUES ('5000000', '1000000', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`isCompatibleWith`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`isCompatibleWith` (`productID1`, `productID2`, `compatibilityType`) VALUES ('0000002', '0001721', 'MC ');
INSERT INTO `partexplorerdb`.`isCompatibleWith` (`productID1`, `productID2`, `compatibilityType`) VALUES ('0001600', '0003331', 'MT ');
INSERT INTO `partexplorerdb`.`isCompatibleWith` (`productID1`, `productID2`, `compatibilityType`) VALUES ('0001699', '0006510', 'MR ');
INSERT INTO `partexplorerdb`.`isCompatibleWith` (`productID1`, `productID2`, `compatibilityType`) VALUES ('0003331', '0004200', 'AT ');
INSERT INTO `partexplorerdb`.`isCompatibleWith` (`productID1`, `productID2`, `compatibilityType`) VALUES ('0003331', '1000000', 'AT ');

COMMIT;


-- -----------------------------------------------------
-- Data for table `partexplorerdb`.`UserRatesGuide`
-- -----------------------------------------------------
START TRANSACTION;
USE `partexplorerdb`;
INSERT INTO `partexplorerdb`.`UserRatesGuide` (`userID`, `guideName`, `build`, `ratingGrade`) VALUES ('0000001', 'MyGuide', '0003000', 9);
INSERT INTO `partexplorerdb`.`UserRatesGuide` (`userID`, `guideName`, `build`, `ratingGrade`) VALUES ('0000002', 'GuideThis', '0005000', 8);
INSERT INTO `partexplorerdb`.`UserRatesGuide` (`userID`, `guideName`, `build`, `ratingGrade`) VALUES ('0000003', 'Extraordinary', '0004000', 10);
INSERT INTO `partexplorerdb`.`UserRatesGuide` (`userID`, `guideName`, `build`, `ratingGrade`) VALUES ('0000004', 'LOVEIT', '0006000', 10);
INSERT INTO `partexplorerdb`.`UserRatesGuide` (`userID`, `guideName`, `build`, `ratingGrade`) VALUES ('0000005', 'NewANDCheap', '0002000', 8);

COMMIT;

